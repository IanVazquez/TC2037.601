Manual del usuario-Simple Deterministic Finite Automaton (DFA) para validar expresiones aritméticas


Este programa está escrito en el lenguaje de programación Racket y se utiliza para validar expresiones aritméticas, especificamente 
se encarga de identificar los diferentes tipos de tokens que se encuentran en una expresión, tales como números enteros, 
números decimales, variables, paréntesis y operadores.


Requisitos para el funcionamiento del programa:

Es indispensable contar con una computadora que cuente con racket v8.8, en caso de no contar con Racket instalado es posible descargarlo
desde la pagina oficial de racket:https://racket-lang.org/.

Pasos para el funcionamiento del programa:

1. Abra Racket o su entorno de desarrollo preferido, algunos ejemplos pueden ser Visual Studio Code o Visual Studio

2. Copie y pegue el código en el archivo

3. Guarde el archivo por el nombre de su elección +.rkt

4. Abra una terminal

5.Escriba la direccion de la ubicación donde guardo el archivo.
Por ejemplo si el archivo se encuentra en una carpeta llamada Racket y esta a la vez se encuentra en documents la ruta que debe teclear
sería: cd Documents\Racket\

Considere que esta es una ruta de ejemplo y es posible que cambie dependiendo de la computadora donde se use la terminal


6. Una vez en la ubicación del archivo debe teclear lo siguiente: racket -it "nombre del archivo".rkt

7.Para utilizar la función arithmetic-lexer y probar el programa, puede llamar a la función con una expresión aritmética como argumento.

 Por ejemplo, para validar la expresión "var=3*num-7.5/5", puede llamar a la función de la siguiente manera:


 (arithmetic-lexer "var=3*num-7.5/5")

El programa devolverá una lista que contiene los tipos de tokens que se encontraron en la expresión. 

En esta ocación, la lista resultante es '(var operator int operator var operator float operator int) 
lo que indica que la expresión contiene una variable, un operador, un número entero, otro operador, otra variable, un número decimal,
otro operador y un número entero.




Datos importantes a considerar:
El programa podría llegar a fallar si no se siguen las instrucciones, no se instalo correctamente racket, 
si se modifica alguna parte del codigo entre otros casos no especificados aquí.



Programa realizado por: 
Domingo Mora Pérez
Ian Luis Vázquez Morán